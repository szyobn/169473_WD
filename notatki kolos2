Tworzenie wykresów:
-----------------------------------------
x1 = np.arange(-1, 1.25, 0.25)
y1 = np.cos(x1) * np.sin(x1)
y2 = np.cos(x1) - np.tan(x1)
plt.subplot(3,1,1)
plt.plot(x1,y1,x1,y2)
plt.xlim(-1,1)

x2 = np.arange(1,4.6,1)
y3 = x2**2/np.sqrt(x2)
plt.subplot(3,1,3)
plt.plot(x2,y3, 'g>')
plt.legend(loc ='upper left')
plt.show()

---------------------------------------

x1 = np.arange(-3, 3.1, 0.1)
y1 = x1*x1+5
y2 = (-x1*x1)+(4*x1)
plt.subplot(1, 3, 1)
plt.plot(x1, y1)
plt.legend(labels=['x^2+5'], loc='upper center')
plt.xlim(-3.1, 3.1)
plt.xlabel('x')
plt.ylabel('Wartość funkcji')
plt.title('wykres funkcji f(x)=x^2+5')
plt.subplot(1, 3, 3)
plt.plot(x1, y1,'ro')
plt.plot(x1, y2,'go')
plt.legend(labels=['x^2+5','x^2+4x'], loc='lower right')
plt.xlim(-3.1, 3.1)
plt.xlabel('x')
plt.ylabel('Wartość funkcji')
plt.title('wykres dwóch funkcji')
plt.savefig('Szymon_Obniski_zad2.png')
plt.show()

-----------------------------------------------------------

Zad.1
x = np.linspace(-3, 5, 25)
y = (8*x**2)/4 + np.cos(x)
plt.plot(x, y, label='f(x) = (8*x^2)/4 + cos(x)')
plt.xlim([-3,5])
plt.xlabel('x')
plt.ylabel('f(x)')
label='f(x) = (8*x^2)/4 + cos(x)'
plt.show()

Zad.2

x = np.arange(-3, 3.1, 0.1)
y = x**2+5
plt.subplot(1,3,1)
plt.plot(x, y, label='f(x)=x^2+5')
plt.xlim(-3,3.1)
plt.legend()
plt.title('Wykres funkcji f(x)=x^2+5')
plt.xlabel('x')
plt.ylabel('wartości funkcji')
plt.xticks([-3,0,3])

x1 = np.arange(-3,3.1,0.1)
y1 = x1**2+5
y2 = - x1 **2+4*x1
plt.subplot(1,3,3)
plt.plot(x1, y1,'ro', x1, y2, 'go',label='-x^2+4x')
plt.xticks([-3,0,3])
plt.xlim(-3,3.1)
plt.xlabel('x')
plt.ylabel('wartości funkcji')
plt.title('wykres dwóch funkcji')
plt.legend(loc='lower right')
plt.show()

Zad.2

x = np.arange(-4,4.1,0.1)
y = -2*x**3+5
plt.subplot(3,2,3)
plt.yticks([-100,0,100])
plt.plot(x,y, 'go', label='-2x^3+5')
plt.xlim(-4,4)
plt.xlabel('x')
plt.ylabel('wynik funkcji')
plt.title('drugi wykres')
plt.legend()

x1 = np.arange(-4,4,0.1)
y1 =  5 * x1**2 + 3 * x1 + 2
plt.subplot(3,2,2)
plt.plot(x1, y1 , 'r', label='5x^2*3x+2')
plt.xlabel('x')
plt.ylabel('wynik funkcji')
plt.title('pierwszy wykres')
plt.xlim(-4,4)
plt.yticks([0,50])
plt.legend(loc='upper right')
plt.show()

Zad.3

df = pd.read_csv('glass.data', header=0, sep=',', decimal='.')
new_data = df[(df['Type of glass'] > 5)]
print(new_data)
grouped = new_data.groupby('Type of glass')['Id number'].count()
plt.pie(grouped, labels=grouped.index, autopct='%1.1f%%')
plt.title('procentowe zużycie różnego szkła (Type of glass = 3)')
plt.show()

#ZAD3
# df = pd.read_csv('glass.data', header=None)
# random_df = df.sample(n=100, replace=True)
# grouped = random_df.groupby(10).size()
# plt.pie(grouped, labels=grouped.index, autopct='%1.1f%%')
# plt.title('uzycie szkla w % (amelinium = 3)')
# plt.savefig('Bartosz_Sobotka_3.png')
# plt.show()


Zad.4

df = pd.read_csv('glass.data', header=0, sep=',', decimal='.')
print(df)
plot = sns.barplot(data=df,x='Type of glass',y='Id number',hue='Type of glass',estimator=np.count_nonzero,errorbar=None,dodge=False,palette=['black','brown','blue'])
plot.legend(title='Szklo ')
plot.set(title='Wykres')
plot.set(title='wykres slubkowy')

plt.show()

plt.yticks(range(-200,800,200))

estimator=np.mean

plt.bar(df["rok"],df["wsrt"])
sns.set()
grupa = df.groupby("rok").agg({"wartosc":["mean"]})
plot= sns.barplot(data=grupa, x= rok, y= wartosc , hue= rok)







